@page "/"
@using CW.Services;
@using CW.Models;
@inject IUserService UserService;
@inject NavigationManager NavManager;


@if(_userList == null)
{
    <p>Loading ...</p>
}else
{
    CheckInternet();
    <div class="table-responsive">
        <table class="table">
            <thead>
                <tr>
                    <th>First Name</th>
                    <th>Last Name</th>
                    <th>Email Address</th>
                    <th>Age</th>
                    <th>BirthDate </th>
                </tr>
            </thead>
            <tbody>
                @foreach(var user in _userList)
                {
                    <tr @onclick= "@(()=>DisplayOtions(user))">
                        <td>@user.FirstName</td>
                        <td>@user.LastName</td>
                        <td>@user.EmailAddress</td>
                        <td>@user.Age</td>
                        <td>@user.BirthDate</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}


@code {
    List<UserResponseModel> _userList;
    protected override async Task OnInitializedAsync()
    {
        _userList = await UserService.GetUsers();
        Console.WriteLine("user list : " + _userList.Count.ToString());

    }

    private  async void DisplayOtions(UserResponseModel user)
    {

        var option = await App.Current.MainPage.DisplayActionSheet("Select Option", "OK", null, "Update User", "Delete User");

        if(option == "Update User")
        {
            NavManager.NavigateTo($"/updateuser/{user.Id}");
        }
        else if(option == "Delete User")
        {
            var resonse =  await UserService.deleteuser(user.Id);
            if (resonse== true)
            {
                await OnInitializedAsync();
                this.StateHasChanged();
            }

        }
    }

    private async void CheckInternet()
    {
        var hasInternet = Connectivity.Current.NetworkAccess == NetworkAccess.Internet;
        var internetType = Connectivity.Current.ConnectionProfiles.FirstOrDefault();

        if(hasInternet == false)
        {
            await App.Current.MainPage.DisplayAlert("Connectivity", $"You do not have an active internet connection. Connect to the internet and try again!", "OK");
        }
    }
} 
